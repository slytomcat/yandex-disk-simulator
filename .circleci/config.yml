version: 2.1
jobs:
  build:
    docker:
      - image: 'circleci/golang:1.16'
    steps:
      - checkout
      - run:
          name: Build for amd64
          command: |
            go build .
            mv yandex-disk-simulator yandex-disk-simulator-linux-amd64
      - run:
          name: Build for 386
          command: |
            export GOARCH=386
            go build .
            mv yandex-disk-simulator yandex-disk-simulator-linux-386
      - run:
          name: Store version
          command: git describe --tags > VERSION
      - persist_to_workspace:
          root: .
          paths:
            - ./yandex-disk-simulator-linux-amd64
            - ./yandex-disk-simulator-linux-386
            - ./VERSION
  test:
    docker:
      - image: 'circleci/golang:1.16'
    steps:
      - checkout
      - run:
          name: Prepare
          command: |
            go get -u github.com/jstemmer/go-junit-report;
            mkdir results;
      - run:
          name: Tests
          command: |
            go test -v -race -coverprofile cover.out 2>&1 | tee /dev/tty |
            go-junit-report > results/results.xml
      - run:
          name: Report coverage to deepsource.io
          command: |
            curl https://deepsource.io/cli | sh
            ./bin/deepsource report --analyzer test-coverage --key go --value-file ./cover.out
      - run:
          name: Format coverage
          command: go tool cover -html=cover.out -o coverage.html
      - store_artifacts:
          path: coverage.html
      - store_test_results:
          path: results
  upload:
    docker:
      - image: 'cibuilds/github:0.10'
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: Publish Release on GitHub
          command: |
            cd ./artifacts
            sed -i "s/^\(v\.[0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/" VERSION
            TAG=$(cat VERSION)
            rm VERSION
            echo "TAG: $TAG"
            ghr -t ${GHAPITOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${TAG} ./

workflows:
  version: 2.1
  build_test_upload:
    jobs:
      - build
      - test
      - upload:
          requires:
            - build
          filters:
            branches:
              only: master
